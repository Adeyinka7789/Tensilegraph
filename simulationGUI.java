/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tensionalsimulator;

import java.awt.Graphics;

/**
 *
 * @author waheed
 */
public class simulationGUI extends javax.swing.JFrame {

    /**
     * Creates new form simulationGUI
     */
    public simulationGUI() {
        initComponents();
    }
    public void paint(Graphics g) {  
        String [] jill = {"u","v","x","y", "max", "min"};
        // Set pen parameters 
        //scale one
         g.drawLine(50,50,50,300);
         g.drawLine(50,300,300,300);
         g.drawLine(50,50,40,60);
         g.drawLine(50,50,60,60);
         g.drawLine(300,300,290,290);
         g.drawLine(300,300,290,310);
         int x = 125;
         int y = 275;
         int xF = x + 100;
         int yF = y + 10;
         while (x < xF)
         {
             g.drawLine(x, yF, x+1, yF);
             x = x + 3;
         }
         x = 125;
         y = 275;
         while (y < yF){
             g.drawLine(x, y, x, y+1);
             y = y + 3;
         }
         x = 125;
         y = 275;
         while (y < yF){
             g.drawLine(xF, y, xF, y+1);
             y = y + 3;
         }
         g.drawLine(175,125,125,175);
         g.drawLine(175,125,225,175);
         
         g.drawLine(125,175,125,275);
         g.drawLine(225,175,225,275);
         g.drawRect(75,75,200,200);         
         g.fillOval(270,70 , 10, 10);
         g.fillOval(70,270 , 10, 10);
         //scale two
         g.drawLine(400,50,400,300);
         g.drawLine(400,300,650,300);
         g.drawLine(400,50,390,60);
         g.drawLine(400,50,410,60);
         g.drawLine(650,300,640,290);
         g.drawLine(650,300,640,310);
         g.drawRect(400,100,200,200);
         g.drawLine(500,150,450,200);
         g.drawLine(500,150,550,200);
         g.drawLine(450,200,450,300);
         g.drawLine(550,200,550,300);
         
          //scale three
         g.drawLine(50,400,50,650);
         g.drawLine(50,650,300,650);
         g.drawLine(50,400,40,410);
         g.drawLine(50,400,60,410);
         g.drawLine(300,650,290,640);
         g.drawLine(300,650,290,660);
         
         g.drawRect(50,500,150,150);
         
         g.drawLine(155,575,130,600);
         g.drawLine(155,575,180,600);
         g.drawLine(130,600,130,650);
         g.drawLine(180,600,180,650);
         
         //scale four
         g.drawLine(400,400,400,650);
         g.drawLine(400,650,650,650);
         g.drawLine(400,400,390,410);
         g.drawLine(400,400,410,410);
         g.drawLine(650,650,640,640);
         g.drawLine(650,650,640,660);
         
         
         g.drawRect(420,460,150,150);
         
         g.drawLine(525,535,500,560);
         g.drawLine(525,535,550,560);
         g.drawLine(500,560,500,610);
         g.drawLine(550,560,550,610);
         g.fillOval(565,455 , 10, 10);
         g.fillOval(415,605 , 10, 10);
         
         ////
         g.drawString(jill[3], 52, 70);
        g.drawString(jill[2], 300, 310);
        g.drawString("("+jill[2], 250, 70);
        g.drawString(jill[4]+",", 260, 71);
        g.drawString(jill[3], 290, 70);
        g.drawString(jill[4], 296, 73);
        g.drawString(")", 320, 70);        
        ////
        g.drawString("("+jill[2], 53, 285);
        g.drawString(jill[5]+",", 64, 288);
        g.drawString(jill[3], 90, 285);
        g.drawString(jill[5], 95, 288);
        g.drawString(")", 120, 285);
        ////
        g.drawString("("+jill[0], 490, 450);
        g.drawString(jill[4]+",", 500, 453);
        g.drawString(jill[1], 525, 450);
        g.drawString(jill[4], 530, 453);
        g.drawString(")", 555, 450);
        ////
        g.drawString("("+jill[0], 410, 620);
        g.drawString(jill[5]+",", 420, 623);
        g.drawString(jill[1], 445, 620);
        g.drawString(jill[5], 450, 623);
        g.drawString(")", 470, 620);
        
        /////
        g.drawString(jill[3], 403, 70);
        g.drawString(jill[2], 630,310);
        g.drawString(jill[1], 52, 400);
        g.drawString(jill[0], 300, 650);
        g.drawString(jill[1], 400, 400);
        g.drawString(jill[0], 630, 640);
        ////
        //g.drawString("scaled window in the origin of the monitor coordinate space",60, 660);
        g.drawString("window in the world coordinate space", 75, 320);
        g.drawString("window in the origin of the world coordinate space", 350, 320);
        g.drawString("ﬁnal position of the window",450, 380);
        g.drawString("scaled window in the origin of the monitor coordinate space",60, 380);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(simulationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(simulationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(simulationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(simulationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new simulationGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
